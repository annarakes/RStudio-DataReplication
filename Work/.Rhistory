table(family06$diffstateB)
## 7 Save New dataset
saveRDS(family06, "arakes-repl-data3.RDS") # as RDS
# close log
sink()
# Code written by: Anna Rakes
# Last Update: 2024-01-16
# Filename: arakes-repl-data3.R
#### Setup ####
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-data3.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
## Warning: Must install tidyverse package prior to running code
#### Project Code ####
## 0 Load data and check metadata
family07 <- readRDS(file = "arakes-repl-data3.RDS")
comment(family07)
library(tidyverse)
## 1 Recode kidvisit variable
family07$kidvisit2 <- ifelse(family07$kidvisit == '1', 6,
ifelse(family07$kidvisit == '2', 6,
ifelse(family07$kidvisit == '3', 5,
ifelse(family07$kidvisit == '4',4,
ifelse(family07$kidvisit == '5', 3,
ifelse(family07$kidvisit == '6', 2,
ifelse(family07$kidvisit == '7', 1,
ifelse(family07$kidvisit == '9', NA,
ifelse(family07$kidvisit == '0', NA, NA)))))))))
## 2 Recode sibvisit variable
family07$sibvisit2 <- ifelse(family07$sibvisit == '1', 6,
ifelse(family07$sibvisit == '2', 6,
ifelse(family07$sibvisit == '3', 5,
ifelse(family07$sibvisit == '4', 4,
ifelse(family07$sibvisit == '5', 3,
ifelse(family07$sibvisit == '6', 2,
ifelse(family07$sibvisit == '7', 1,
ifelse(family07$sibvisit == '9', NA,
ifelse(family07$sibvisit == '0', NA, NA)))))))))
## 3 Recode pavisit1 variable
family07$pavisit2 <- ifelse(family07$PAVISIT1 == '1', 6,
ifelse(family07$PAVISIT1 == '2', 6,
ifelse(family07$PAVISIT1 == '3', 5,
ifelse(family07$PAVISIT1 == '4',4,
ifelse(family07$PAVISIT1 == '5', 3,
ifelse(family07$PAVISIT1 == '6', 2,
ifelse(family07$PAVISIT1 == '7', 1,
ifelse(family07$PAVISIT1 == '8', 1,
ifelse(family07$PAVISIT1 == '9', NA,
ifelse(family07$PAVISIT1 == '10', NA,
ifelse(family07$PAVISIT1 == '0', NA,
ifelse(family07$PAVISIT1 == '99', NA, NA))))))))))))
## 4 Recode mavisit1 variable
family07$mavisit2 <- ifelse(family07$MAVISIT1 == '1', 6,
ifelse(family07$MAVISIT1 == '2', 6,
ifelse(family07$MAVISIT1 == '3', 5,
ifelse(family07$MAVISIT1 == '4',4,
ifelse(family07$MAVISIT1 == '5', 3,
ifelse(family07$MAVISIT1 == '6', 2,
ifelse(family07$MAVISIT1 == '7', 1,
ifelse(family07$MAVISIT1 == '8', 1,
ifelse(family07$MAVISIT1 == '9', NA,
ifelse(family07$MAVISIT1 == '10', NA,
ifelse(family07$MAVISIT1 == '0', NA,
ifelse(family07$MAVISIT1 == '99', NA, NA))))))))))))
## 5 Recode cousins variable
family07$cousins2 <- ifelse(family07$cousins == '1', 3,
ifelse(family07$cousins == '2', 2,
ifelse(family07$cousins == '3', 1,
ifelse(family07$cousins == '4',NA,
ifelse(family07$cousins == '8', NA,
ifelse(family07$cousins == '9', NA,
ifelse(family07$cousins == '0', NA, NA)))))))
## 6 Recode niecenep variable
family07$niecenep2 <- ifelse(family07$niecenep == '1', 3,
ifelse(family07$niecenep == '2', 2,
ifelse(family07$niecenep == '3', 1,
ifelse(family07$niecenep == '4',NA,
ifelse(family07$niecenep == '8', NA,
ifelse(family07$niecenep == '9', NA,
ifelse(family07$niecenep == '0', NA, NA)))))))
## 7 Recode uncaunts variable
family07$uncaunts2 <- ifelse(family07$uncaunts == '1', 3,
ifelse(family07$uncaunts == '2', 2,
ifelse(family07$uncaunts == '3', 1,
ifelse(family07$uncaunts == '4',NA,
ifelse(family07$uncaunts == '8', NA,
ifelse(family07$uncaunts == '9', NA,
ifelse(family07$uncaunts == '0', NA, NA)))))))
## 8 Internal Documentation
comment(family07$kidvisit2) <-
"New scale for kidvisit variable / arakes-repl-data3.R / AMR / 2024-01-16"
comment(family07$sibvisit2) <-
"New scale for sibvisit variable / arakes-repl-data3.R / AMR / 2024-01-16"
comment(family07$pavisit2) <-
"New scale for pavisit1 variable / arakes-repl-data3.R / AMR / 2024-01-16"
comment(family07$mavisit2) <-
"New scale for mavisit1 variable / arakes-repl-data3.R / AMR / 2024-01-16"
comment(family07$cousins2) <-
"New scale for cousins variable / arakes-repl-data3.R / AMR / 2024-01-16"
comment(family07$niecenep2) <-
"New scale for niecenep variable / arakes-repl-data3.R / AMR / 2024-01-16"
comment(family07$uncaunts2) <-
"New scale for uncaunts variable / arakes-repl-data3.R / AMR / 2024-01-16"
comment(family07) <- c(comment(family07),
"Updated data with family variables recoded / arakes-repl-data3.R / AMR / 2024-01-16")
## 9 Run Diagnostics comparing original family variable to recoded family variable
table(family07$kidvisit2, useNA = "ifany")
table(family07$kidvisit, useNA = "ifany")
table(family07$sibvisit2, useNA = "ifany")
table(family07$sibvisit, useNA = "ifany")
table(family07$pavisit2, useNA = "ifany")
table(family07$PAVISIT1, useNA = "ifany")
table(family07$mavisit2, useNA = "ifany")
table(family07$MAVISIT1, useNA = "ifany")
table(family07$cousins2, useNA = "ifany")
table(family07$cousins, useNA = "ifany")
table(family07$niecenep2, useNA = "ifany")
table(family07$niecenep, useNA = "ifany")
table(family07$uncaunts2, useNA = "ifany")
table(family07$uncaunts, useNA = "ifany")
## 10 Overall Descriptive Statistics to compare to original sample
summary(family07$year)
min(family07$age)
summary(family07$whiteB)
summary(family07$blackB)
summary(family07$femaleB)
summary(family07$marriedB)
summary(family07$diffcityB)
summary(family07$diffstateB)
## 11 Save new dataset
saveRDS(family07, "arakes-repl-data4.RDS") # as RDS
# close log
sink()
# Code written by: Anna Rakes
# Last Update: 2024-01-16
# Filename: arakes-repl-data4.R
#### Setup ####
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-data4.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
## Warning: Must install tidyverse package prior to running code
#### Project Code ####
## 0 Load data and check metadata
family08 <- readRDS(file = "arakes-repl-data4.RDS")
comment(family08)
library(tidyverse)
## 1 Create Entire Family Index
family09 <- mutate(family08, wholefam = rowMeans(select(family08, kidvisit2:uncaunts2), na.rm = TRUE))
family10 <- family09 %>%
drop_na(wholefam)
## 2 Create Nuclear family index
family11 <- mutate(family10, nucfamily = rowMeans(select(family10, kidvisit2:mavisit2), na.rm = TRUE))
## 3 Internal documentation - add metadata
comment(family11$wholefam) <- "Average of all family variables / arakes-repl-data4.R / AMR / 2024-01-17"
comment(family11$nucfamily) <- "Average of nuclear family variable / arakes-repl-data4.R / AMR / 2024-01-17"
comment(family11) <- c(comment(family11),
"Updated data with nuclear family index / arakes-repl-data4.R / AMR / 2024-01-17")
## 4 Run diagnostics
table(family11$nucfamily)
## 5 Save the data
saveRDS(family11, "arakes-repl-data5.RDS")
# close log
sink()
# Code written by: Anna Rakes
# Last Update: 2024-01-17
# Filename: arakes-repl-data5.R
#### Setup ####
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-data5.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
## Warning: Must install tidyverse package prior to running code
#### Project Code ####
## 0 Load data and check metadata
family11 <- readRDS(file = "arakes-repl-data5.RDS")
comment(family11)
library(tidyverse)
## 1 Create Extended Family Index
family12 <- mutate(family11, extfamily = rowMeans(select(family11, cousins2:uncaunts2), na.rm = TRUE))
## 2 Convert variables used in regression model to numeric
family12$age = as.numeric(as.character(family12$age))
family12$educ = as.numeric(as.character(family12$educ))
family12$RINCOM98 = as.numeric(as.character(family12$RINCOM98))
## 3 Internal documentation
comment(family12$extfamily) <- "Average of extended family variables / arakes-repl-data5.R / AMR / 2024-01-17"
comment(family12) <- c(comment(family12),
"Final dataset with extended family variable / arakes-repl-data5.R / AMR / 2024-01-17")
## 4 Run diagnostics to check overall descriptive statistics
descstats = data.frame()
family13 <-select(family12, kidvisit2, sibvisit2, pavisit2, mavisit2, cousins2, niecenep2, uncaunts2, nucfamily, extfamily)
for(i in 1:ncol(family13)){
variables = (colnames(family13)[i])
means = round(mean(family13[,i], na.rm = TRUE), digits = 3)
std = round(sd(family13[,i], na.rm = TRUE), digits = 3)
descstats = rbind(descstats, c(variables, means,std))
}
colnames(descstats) <- c("Variables", "Means", "StandardDev")
## 5 Save the data
saveRDS(family12, "arakes-repl-data6.RDS") # as RDS
# close log
sink()
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-analysis1.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
family12 <- readRDS(file = "arakes-repl-data6.RDS")
comment(family12)
library(tidyverse)
## 1 Overall Stats
mean(family12$nucfamily, na.rm = TRUE)
# close log
sink()
# close log
sink()
## 4 Sex variable for Nuc Family
stats5 <- select(family12, nucfamily, femaleB)
stats5_drop <- stats5 %>%
drop_na(nucfamily)
prop.table(table(stats5_drop$femaleB))
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-analysis4.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
family12 <- readRDS(file = "arakes-repl-data6.RDS")
comment(family12)
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
# close log
sink()
# close log
sink()
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 3 Father Regression Model
dadmod <- lm(pavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(dadmod)
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 3 Father Regression Model
dadmod <- lm(pavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(dadmod)
## 4 Mother Regression Model
mommod <- lm(mavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(mommod)
## 5 Sibling Regression Model
sibmod <- lm(sibvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(sibmod)
## 6 Adult Child Regression Model
kidmod <- lm(kidvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(kidmod)
## 7 Aunt/Uncle Regression Model
uncmod <- lm(uncaunts2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(uncmod)
## 8 Nephew/Nice Regression Model
nepmod <- lm(niecenep2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nepmod)
## 9 Cousins Regression Model
cousmod <- lm(cousins2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(cousmod)
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
summary(nucmod, digits = 2)
round(summary(nucmod), digits = 2)
summary(nucmod, digits = 2)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 3 Father Regression Model
dadmod <- lm(pavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(dadmod)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 4 Mother Regression Model
mommod <- lm(mavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(mommod)
## 5 Sibling Regression Model
sibmod <- lm(sibvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(sibmod)
## 6 Adult Child Regression Model
kidmod <- lm(kidvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(kidmod)
## 6 Adult Child Regression Model
kidmod <- lm(kidvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(kidmod)
## 7 Aunt/Uncle Regression Model
uncmod <- lm(uncaunts2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(uncmod)
## 8 Nephew/Nice Regression Model
nepmod <- lm(niecenep2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nepmod)
## 9 Cousins Regression Model
cousmod <- lm(cousins2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(cousmod)
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-analysis4.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
family12 <- readRDS(file = "arakes-repl-data6.RDS")
comment(family12)
# close log
sink()
# close log
sink()
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 3 Father Regression Model
dadmod <- lm(pavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(dadmod)
## 4 Mother Regression Model
mommod <- lm(mavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(mommod)
## 3 Father Regression Model
dadmod <- lm(pavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(dadmod)
## 4 Mother Regression Model
mommod <- lm(mavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(mommod)
## 5 Sibling Regression Model
sibmod <- lm(sibvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(sibmod)
## 6 Adult Child Regression Model
kidmod <- lm(kidvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(kidmod)
## 7 Aunt/Uncle Regression Model
uncmod <- lm(uncaunts2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(uncmod)
## 8 Nephew/Nice Regression Model
nepmod <- lm(niecenep2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nepmod)
## 9 Cousins Regression Model
cousmod <- lm(cousins2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(cousmod)
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 3 Father Regression Model
dadmod <- lm(pavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(dadmod)
## 4 Mother Regression Model
mommod <- lm(mavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(mommod)
## 5 Sibling Regression Model
sibmod <- lm(sibvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(sibmod)
## 6 Adult Child Regression Model
kidmod <- lm(kidvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(kidmod)
## 6 Adult Child Regression Model
kidmod <- lm(kidvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(kidmod)
## 7 Aunt/Uncle Regression Model
uncmod <- lm(uncaunts2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(uncmod)
## 8 Nephew/Nice Regression Model
nepmod <- lm(niecenep2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nepmod)
## 9 Cousins Regression Model
cousmod <- lm(cousins2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(cousmod)
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-analysis4.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
family12 <- readRDS(file = "arakes-repl-data6.RDS")
comment(family12)
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
# close log
sink()
# close log
sink()
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
## 2 Extended family index regression model
extmod <- lm(extfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(extmod)
## 3 Father Regression Model
dadmod <- lm(pavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(dadmod)
## 4 Mother Regression Model
mommod <- lm(mavisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(mommod)
## 5 Sibling Regression Model
sibmod <- lm(sibvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(sibmod)
## 6 Adult Child Regression Model
kidmod <- lm(kidvisit2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(kidmod)
## 7 Aunt/Uncle Regression Model
uncmod <- lm(uncaunts2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(uncmod)
## 8 Nephew/Nice Regression Model
nepmod <- lm(niecenep2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nepmod)
## 9 Cousins Regression Model
cousmod <- lm(cousins2 ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(cousmod)
rm(list=ls())
options(width = 80)
filename <-"arakes-repl-analysis4.R"
sink(paste(filename, ".log", sep = "")) # create log file to store output
# R version
R.version.string
family12 <- readRDS(file = "arakes-repl-data6.RDS")
comment(family12)
# close log
sink()
# close log
sink()
## 1 Nuclear family index regression model
nucmod <- lm(nucfamily ~ whiteB + blackB + diffcityB + diffstateB + femaleB +
age + marriedB + educ + RINCOM98, data = family12)
summary(nucmod)
